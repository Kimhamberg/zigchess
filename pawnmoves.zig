const Board = @import("board.zig").Board;

const pawnMovesAt = [64]u64{ 0b0000000000000000000000000000000000000000000000000000000000000000, 0b0000000000000000000000000000000000000000000000000000000000000000, 0b0000000000000000000000000000000000000000000000000000000000000000, 0b0000000000000000000000000000000000000000000000000000000000000000, 0b0000000000000000000000000000000000000000000000000000000000000000, 0b0000000000000000000000000000000000000000000000000000000000000000, 0b0000000000000000000000000000000000000000000000000000000000000000, 0b0000000000000000000000000000000000000000000000000000000000000000, 0b1000000000000000000000000000000000000000000000000000000000000000, 0b0100000000000000000000000000000000000000000000000000000000000000, 0b0010000000000000000000000000000000000000000000000000000000000000, 0b0001000000000000000000000000000000000000000000000000000000000000, 0b0000100000000000000000000000000000000000000000000000000000000000, 0b0000010000000000000000000000000000000000000000000000000000000000, 0b0000001000000000000000000000000000000000000000000000000000000000, 0b0000000100000000000000000000000000000000000000000000000000000000, 0b0000000010000000000000000000000000000000000000000000000000000000, 0b0000000001000000000000000000000000000000000000000000000000000000, 0b0000000000100000000000000000000000000000000000000000000000000000, 0b0000000000010000000000000000000000000000000000000000000000000000, 0b0000000000001000000000000000000000000000000000000000000000000000, 0b0000000000000100000000000000000000000000000000000000000000000000, 0b0000000000000010000000000000000000000000000000000000000000000000, 0b0000000000000001000000000000000000000000000000000000000000000000, 0b0000000000000000100000000000000000000000000000000000000000000000, 0b0000000000000000010000000000000000000000000000000000000000000000, 0b0000000000000000001000000000000000000000000000000000000000000000, 0b0000000000000000000100000000000000000000000000000000000000000000, 0b0000000000000000000010000000000000000000000000000000000000000000, 0b0000000000000000000001000000000000000000000000000000000000000000, 0b0000000000000000000000100000000000000000000000000000000000000000, 0b0000000000000000000000010000000000000000000000000000000000000000, 0b0000000000000000000000001000000000000000000000000000000000000000, 0b0000000000000000000000000100000000000000000000000000000000000000, 0b0000000000000000000000000010000000000000000000000000000000000000, 0b0000000000000000000000000001000000000000000000000000000000000000, 0b0000000000000000000000000000100000000000000000000000000000000000, 0b0000000000000000000000000000010000000000000000000000000000000000, 0b0000000000000000000000000000001000000000000000000000000000000000, 0b0000000000000000000000000000000100000000000000000000000000000000, 0b0000000000000000000000000000000010000000000000000000000000000000, 0b0000000000000000000000000000000001000000000000000000000000000000, 0b0000000000000000000000000000000000100000000000000000000000000000, 0b0000000000000000000000000000000000010000000000000000000000000000, 0b0000000000000000000000000000000000001000000000000000000000000000, 0b0000000000000000000000000000000000000100000000000000000000000000, 0b0000000000000000000000000000000000000010000000000000000000000000, 0b0000000000000000000000000000000000000001000000000000000000000000, 0b0000000000000000000000000000000010000000000000000000000000000000, 0b0000000000000000000000000000000001000000000000000000000000000000, 0b0000000000000000000000000000000000100000000000000000000000000000, 0b0000000000000000000000000000000000010000000000000000000000000000, 0b0000000000000000000000000000000000001000000000000000000000000000, 0b0000000000000000000000000000000000000100000000000000000000000000, 0b0000000000000000000000000000000000000010000000000000000000000000, 0b0000000000000000000000000000000000000001000000000000000000000000, 0b0000000000000000000000000000000000000000000000001000000000000000, 0b0000000000000000000000000000000000000000000000000100000000000000, 0b0000000000000000000000000000000000000000000000000010000000000000, 0b0000000000000000000000000000000000000000000000000001000000000000, 0b0000000000000000000000000000000000000000000000000000100000000000, 0b0000000000000000000000000000000000000000000000000000010000000000, 0b0000000000000000000000000000000000000000000000000000001000000000, 0b0000000000000000000000000000000000000000000000000000000100000000 };

const pawnCapturesAt = [64]u64{ 0b0000000000000000000000000000000000000000000000000000000000000000, 0b0000000000000000000000000000000000000000000000000000000000000000, 0b0000000000000000000000000000000000000000000000000000000000000000, 0b0000000000000000000000000000000000000000000000000000000000000000, 0b0000000000000000000000000000000000000000000000000000000000000000, 0b0000000000000000000000000000000000000000000000000000000000000000, 0b0000000000000000000000000000000000000000000000000000000000000000, 0b0000000000000000000000000000000000000000000000000000000000000000, 0b0100000000000000000000000000000000000000000000000000000000000000, 0b1010000000000000000000000000000000000000000000000000000000000000, 0b0101000000000000000000000000000000000000000000000000000000000000, 0b0010100000000000000000000000000000000000000000000000000000000000, 0b0001010000000000000000000000000000000000000000000000000000000000, 0b0000101000000000000000000000000000000000000000000000000000000000, 0b0000010100000000000000000000000000000000000000000000000000000000, 0b0000001000000000000000000000000000000000000000000000000000000000, 0b0000000001000000000000000000000000000000000000000000000000000000, 0b0000000010100000000000000000000000000000000000000000000000000000, 0b0000000001010000000000000000000000000000000000000000000000000000, 0b0000000000101000000000000000000000000000000000000000000000000000, 0b0000000000010100000000000000000000000000000000000000000000000000, 0b0000000000001010000000000000000000000000000000000000000000000000, 0b0000000000000101000000000000000000000000000000000000000000000000, 0b0000000000000010000000000000000000000000000000000000000000000000, 0b0000000000000000010000000000000000000000000000000000000000000000, 0b0000000000000000101000000000000000000000000000000000000000000000, 0b0000000000000000010100000000000000000000000000000000000000000000, 0b0000000000000000001010000000000000000000000000000000000000000000, 0b0000000000000000000101000000000000000000000000000000000000000000, 0b0000000000000000000010100000000000000000000000000000000000000000, 0b0000000000000000000001010000000000000000000000000000000000000000, 0b0000000000000000000000100000000000000000000000000000000000000000, 0b0000000000000000000000000100000000000000000000000000000000000000, 0b0000000000000000000000001010000000000000000000000000000000000000, 0b0000000000000000000000000101000000000000000000000000000000000000, 0b0000000000000000000000000010100000000000000000000000000000000000, 0b0000000000000000000000000001010000000000000000000000000000000000, 0b0000000000000000000000000000101000000000000000000000000000000000, 0b0000000000000000000000000000010100000000000000000000000000000000, 0b0000000000000000000000000000001000000000000000000000000000000000, 0b0000000000000000000000000000000001000000000000000000000000000000, 0b0000000000000000000000000000000010100000000000000000000000000000, 0b0000000000000000000000000000000001010000000000000000000000000000, 0b0000000000000000000000000000000000101000000000000000000000000000, 0b0000000000000000000000000000000000010100000000000000000000000000, 0b0000000000000000000000000000000000001010000000000000000000000000, 0b0000000000000000000000000000000000000101000000000000000000000000, 0b0000000000000000000000000000000000000010000000000000000000000000, 0b0000000000000000000000000000000000000000010000000000000000000000, 0b0000000000000000000000000000000000000000101000000000000000000000, 0b0000000000000000000000000000000000000000010100000000000000000000, 0b0000000000000000000000000000000000000000001010000000000000000000, 0b0000000000000000000000000000000000000000000101000000000000000000, 0b0000000000000000000000000000000000000000000010100000000000000000, 0b0000000000000000000000000000000000000000000001010000000000000000, 0b0000000000000000000000000000000000000000000000100000000000000000, 0b0000000000000000000000000000000000000000000000000100000000000000, 0b0000000000000000000000000000000000000000000000001010000000000000, 0b0000000000000000000000000000000000000000000000000101000000000000, 0b0000000000000000000000000000000000000000000000000010100000000000, 0b0000000000000000000000000000000000000000000000000001010000000000, 0b0000000000000000000000000000000000000000000000000000101000000000, 0b0000000000000000000000000000000000000000000000000000010100000000, 0b0000000000000000000000000000000000000000000000000000001000000000 };

pub fn getPawnMoves(pawnBoard: Board, freeSquares: u64, enemySquares: u64) u64 {
    const h1: u64 = pawnBoard.h1;
    const g1: u64 = pawnBoard.g1;
    const f1: u64 = pawnBoard.f1;
    const e1: u64 = pawnBoard.e1;
    const d1: u64 = pawnBoard.d1;
    const c1: u64 = pawnBoard.c1;
    const b1: u64 = pawnBoard.b1;
    const a1: u64 = pawnBoard.a1;
    const h2: u64 = pawnBoard.h2;
    const g2: u64 = pawnBoard.g2;
    const f2: u64 = pawnBoard.f2;
    const e2: u64 = pawnBoard.e2;
    const d2: u64 = pawnBoard.d2;
    const c2: u64 = pawnBoard.c2;
    const b2: u64 = pawnBoard.b2;
    const a2: u64 = pawnBoard.a2;
    const h3: u64 = pawnBoard.h3;
    const g3: u64 = pawnBoard.g3;
    const f3: u64 = pawnBoard.f3;
    const e3: u64 = pawnBoard.e3;
    const d3: u64 = pawnBoard.d3;
    const c3: u64 = pawnBoard.c3;
    const b3: u64 = pawnBoard.b3;
    const a3: u64 = pawnBoard.a3;
    const h4: u64 = pawnBoard.h4;
    const g4: u64 = pawnBoard.g4;
    const f4: u64 = pawnBoard.f4;
    const e4: u64 = pawnBoard.e4;
    const d4: u64 = pawnBoard.d4;
    const c4: u64 = pawnBoard.c4;
    const b4: u64 = pawnBoard.b4;
    const a4: u64 = pawnBoard.a4;
    const h5: u64 = pawnBoard.h5;
    const g5: u64 = pawnBoard.g5;
    const f5: u64 = pawnBoard.f5;
    const e5: u64 = pawnBoard.e5;
    const d5: u64 = pawnBoard.d5;
    const c5: u64 = pawnBoard.c5;
    const b5: u64 = pawnBoard.b5;
    const a5: u64 = pawnBoard.a5;
    const h6: u64 = pawnBoard.h6;
    const g6: u64 = pawnBoard.g6;
    const f6: u64 = pawnBoard.f6;
    const e6: u64 = pawnBoard.e6;
    const d6: u64 = pawnBoard.d6;
    const c6: u64 = pawnBoard.c6;
    const b6: u64 = pawnBoard.b6;
    const a6: u64 = pawnBoard.a6;
    const h7: u64 = pawnBoard.h7;
    const g7: u64 = pawnBoard.g7;
    const f7: u64 = pawnBoard.f7;
    const e7: u64 = pawnBoard.e7;
    const d7: u64 = pawnBoard.d7;
    const c7: u64 = pawnBoard.c7;
    const b7: u64 = pawnBoard.b7;
    const a7: u64 = pawnBoard.a7;
    const h8: u64 = pawnBoard.h8;
    const g8: u64 = pawnBoard.g8;
    const f8: u64 = pawnBoard.f8;
    const e8: u64 = pawnBoard.e8;
    const d8: u64 = pawnBoard.d8;
    const c8: u64 = pawnBoard.c8;
    const b8: u64 = pawnBoard.b8;
    const a8: u64 = pawnBoard.a8;
    return pawnMovesAt[square] & freeSquares | pawnCapturesAt[square] & enemySquares;
}
